/*
 * ‚úÖ GU√çA DE USO DEL MODO CALIBRACI√ìN - Master LoRa
 * 
 * Esta gu√≠a explica c√≥mo usar correctamente el modo calibraci√≥n del Master
 * y c√≥mo solucionar errores comunes.
 */

// ============================================================================
// üö® PROBLEMAS CORREGIDOS EN EL MODO CALIBRACI√ìN
// ============================================================================

/*
PROBLEMA 1: Variable no definida 'Node_to_Calibrate'
- CAUSA: Variable no declarada en el scope
- SOLUCI√ìN: Usar 'nodo_a_Consultar' que ya existe

PROBLEMA 2: L√≥gica incorrecta en Survey_MeasureNodeSignal()
- CAUSA: validSamples = totalRSSI / Master_Counter (divisi√≥n incorrecta)
- SOLUCI√ìN: validSamples++ para contar muestras correctamente

PROBLEMA 3: Variables no inicializadas
- CAUSA: totalRSSI, validSamples no se resetean entre calibraciones
- SOLUCI√ìN: Inicializaci√≥n expl√≠cita en StartCalibration()

PROBLEMA 4: Falta manejo de errores
- CAUSA: No validar estado antes de calibrar
- SOLUCI√ìN: Verificar F_MasterMode y F_MasterCalibration
*/

// ============================================================================
// ‚úÖ C√ìMO USAR EL MODO CALIBRACI√ìN CORRECTAMENTE
// ============================================================================

void ejemploUsoCalibraci√≥n() {
    
    // üü¢ M√âTODO 1: Uso manual desde c√≥digo
    Serial.println("=== INICIANDO CALIBRACI√ìN MANUAL ===");
    
    // Verificar que estamos en modo Master
    if (Node.F_MasterMode) {
        // Iniciar calibraci√≥n del nodo 1
        Node.StartCalibration("1");
        
        // El sistema autom√°ticamente:
        // 1. Configura las variables
        // 2. Inicia el timer de survey
        // 3. Env√≠a 10 mensajes al nodo
        // 4. Mide RSSI de cada respuesta
        // 5. Calcula promedio y recomienda configuraci√≥n
        // 6. Finaliza autom√°ticamente
    }
    
    // üü¢ M√âTODO 2: Uso desde servidor web
    Serial.println("=== CALIBRACI√ìN VIA WEB ===");
    
    // Enviar comando web para iniciar calibraci√≥n:
    // POST /control con command: "CAL1" (calibrar nodo 1)
    // El servidor procesar√° y llamar√° a StartCalibration()
    
    // üü¢ M√âTODO 3: Verificar estado de calibraci√≥n
    if (Node.IsCalibrationActive()) {
        Serial.println("üìä Calibraci√≥n en progreso...");
    } else {
        Serial.println("‚úÖ Calibraci√≥n completa o inactiva");
    }
    
    // üü¢ M√âTODO 4: Detener calibraci√≥n manualmente
    if (Node.IsCalibrationActive()) {
        Node.StopCalibration();
        Serial.println("üõë Calibraci√≥n detenida manualmente");
    }
}

// ============================================================================
// üìä FLUJO COMPLETO DEL MODO CALIBRACI√ìN
// ============================================================================

/*
PASO 1: Activaci√≥n
- Node.StartCalibration("1") o comando web
- F_MasterCalibration = true
- Variables inicializadas

PASO 2: Timer Survey (cada 5 segundos)
- Protocol.NextSurvey = true
- Survey_Calibration_Node() env√≠a mensaje
- Incrementa Master_Counter

PASO 3: Recepci√≥n de respuesta
- F_Recibido = true
- Survey_MeasureNodeSignal() procesa RSSI
- totalRSSI += RSSI
- validSamples++

PASO 4: Finalizaci√≥n autom√°tica
- Cuando validSamples >= 10
- Calcula avgRSSI = totalRSSI / validSamples
- Recomienda configuraci√≥n seg√∫n RSSI
- F_Node_Calibrated = true
- Survey_FinishCalibration()

PASO 5: Retorno al modo normal
- F_MasterCalibration = false
- Variables reseteadas
- Timer normal del Master reinicia
*/

// ============================================================================
// üîß COMANDOS PARA PRUEBAS Y DEBUG
// ============================================================================

void comandosDebugCalibraci√≥n() {
    // Verificar variables antes de calibrar
    Serial.printf("Master Mode: %s\n", Node.F_MasterMode ? "true" : "false");
    Serial.printf("Calibration Active: %s\n", Node.F_MasterCalibration ? "true" : "false");
    Serial.printf("Node to Query: %s\n", Node.nodo_a_Consultar.c_str());
    
    // Durante calibraci√≥n, mostrar progreso
    Serial.printf("Samples: %d/10\n", Node.validSamples);
    Serial.printf("Total RSSI: %.1f\n", Node.totalRSSI);
    Serial.printf("Avg RSSI: %.1f dBm\n", Node.avgRSSI);
    Serial.printf("Counter: %d\n", Node.Master_Counter);
    
    // Flags de estado
    Serial.printf("NextSurvey: %s\n", Node.Protocol.NextSurvey ? "true" : "false");
    Serial.printf("F_Recibido: %s\n", Node.F_Recibido ? "true" : "false");
    Serial.printf("F_Node_Calibrated: %s\n", Node.F_Node_Calibrated ? "true" : "false");
}

// ============================================================================
// ‚ö†Ô∏è ERRORES COMUNES Y SOLUCIONES
// ============================================================================

/*
ERROR: "Calibraci√≥n no inicia"
CAUSA: F_MasterMode = false
SOLUCI√ìN: Verificar que el dispositivo est√© en modo Master

ERROR: "Nodo no responde durante calibraci√≥n"
CAUSA: nodo_a_Consultar incorrecto o nodo apagado
SOLUCI√ìN: Verificar que el nodo existe y est√° activo

ERROR: "Calibraci√≥n se cuelga"
CAUSA: F_Recibido no se activa (problema de recepci√≥n)
SOLUCI√ìN: Verificar configuraci√≥n de radio y antena

ERROR: "Variables incorrectas"
CAUSA: No se resetean entre calibraciones
SOLUCI√ìN: Llamar StartCalibration() antes de cada nueva calibraci√≥n

ERROR: "Timer no funciona"
CAUSA: Timer del Master interfiere con timer de Survey
SOLUCI√ìN: Los timers se gestionan autom√°ticamente en Master_Calibration_Init/End
*/

// ============================================================================
// üöÄ COMANDOS SERIE PARA PRUEBAS
// ============================================================================

/*
Para probar desde Serial Monitor:

1. Iniciar calibraci√≥n:
   CAL1  (calibrar nodo 1)
   CAL2  (calibrar nodo 2)
   CAL3  (calibrar nodo 3)

2. Detener calibraci√≥n:
   STOP

3. Ver estado:
   STAT

4. Modo Master normal:
   MAST

5. Debug completo:
   DEBUG
*/